Go CLI
1) go build-> compiles
2) go run -> compiles and executes
3) go install -> Install a go package
4) go fmt -> formats all the codes in each file of the current directory
5) go get -> Download raw source code of someone else's package

Types of packages
1) Executable package
2) Reusable package- Putting the reusable code

package main => Executable package

fmt -> format package. It is one of the standard lib.
It implements the I/O operations

BASIC FORMAT OF A GO FILE
{package declaration}
{import packages}
{function to tell what go will do}

CREATING A NEW VARIABLE
{new variable} {name of variable} {type of variable} = {value}
example: var name string = "yuvraj"

You can also omit the type. Go cannot allow change of data type of variable

HANDLING LIST DATA STRUCTURE IN GOLANG
1) Array: Fixed length of things
2) Slice: Array that can grow/shrink (dynamic array)

Slice can hold only one data type.

When we append to slice, a new slice is created. That slice must be reassigned to another variable

LOOPING OVER A SLICE
for i, card := range cards {
		fmt.Println(i, card)
}

Here the first element would be the index.
Second element is the value at that index in the slice
"range cards" (where cards is a slice) declares that a looping is being performed over a slice

